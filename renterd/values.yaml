image:
  repository: ghcr.io/siafoundation/renterd
  pullPolicy: IfNotPresent
  tag: "2.2.1"

service:
  bus:
    type: ClusterIP
    port: 9981
  http:
    type: ClusterIP
    port: 9980
  s3:
    type: ClusterIP
    port: 8080

# Sia network name, use mainnet for main network.
# For builds older than 12/08/2024 use "-zen" suffix in image name for testnet
# Known test networks: zen, anagami
network: "mainnet"

# You need to create secret with seed and api passwords manually, check README.md for more info.
secretName: "renterd"

# If you decide to not use built-in mysql chart, you will need to create a secret manually and provide its name here. Check README.md for more info.
# If you want to use built-in mysql set secret name below and enable mysql.enabled in values.
# Leave empty and disable built-in mysql chart to use sqlite backend. (default)
databaseSecretName: ""

s3:
  enabled: true

storage:
  name: "renterd-bus-data"
  spec:
    accessModes: [ "ReadWriteOnce" ]
    # storageClassName: ""
    resources:
      requests:
        storage: 8Gi

bus:
  # renterd config - bus section
  # gatewayAddr is overridden in configmap, so don't specify it inside config
  config: {}
    # announcementMaxAgeHours: 8736
    # bootstrap: true
    # persistInterval: 1m0s
    # usedUtxoExpiry: 24h0m0s
    # slabBufferCompleionThreshold: 4096
  resources: {}
    # limits:
    #   cpu: 2000m
    #   memory: 8Gi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  affinity: {}
  tolerations: {}
  topologySpreadConstraints: {}
  # as renterd does not need to access k8s api, I recommend leaving it off
  automountServiceAccountToken: false
  enableServiceLinks: false
  securityContext: {}
    # runAsUser: 1000
    # runAsGroup: 1000
    # fsGroup: 1000

autopilot:
  enabled: true
  # renterd config - autopilot section
  config: {}
    # accountsRefillInterval: 10s
    # heartbeat: 30m0s
    # migrationHealthCutoff: 0.75
    # revisionBroadcastInterval: 168h0m0s
    # revisionSubmissionBuffer: 144
    # scannerInterval: 24h0m0s
    # scannerBatchSize: 1000
    # scannerNumThreads: 100
    # migratorParallelSlabsPerWorker: 1
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: {}
  topologySpreadConstraints: {}
  # as renterd does not need to access k8s api, I recommend leaving it off
  automountServiceAccountToken: false
  enableServiceLinks: false
  securityContext: {}
    # runAsUser: 1000
    # runAsGroup: 1000
    # fsGroup: 1000

workers:
  # renterd config - worker section
  config: {}
    # busFlushInterval: 5s
    # contractLockTimeout: 30s
    # downloadOverdriveTimeout: 3s
    # uploadOverdriveTimeout: 3s
    # downloadMaxOverdrive: 5
    # downloadMaxMemory: 1073741824
    # uploadMaxMemory: 1073741824
    # uploadMaxOverdrive: 5
  replicas: 1
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: {}
  topologySpreadConstraints: {}
  # as renterd does not need to access k8s api, I recommend leaving it off
  automountServiceAccountToken: false
  enableServiceLinks: false
  securityContext: {}
    # runAsUser: 1000
    # runAsGroup: 1000
    # fsGroup: 1000

ingresses: []
  # - name: "renterd"
  #   className: "traefik"
  #   annotations: {}
  #   hosts:
  #     - host: renterd.example.com
  #       paths:
  #         - path: /
  #           pathType: ImplementationSpecific
  #           svcName: renterd-bus
  #           svcPort: 9980
  #         - path: /api/worker
  #           pathType: ImplementationSpecific
  #           svcName: renterd-worker
  #           svcPort: 9980
  #         - path: /api/autopilot
  #           pathType: ImplementationSpecific
  #           svcName: renterd-autopilot
  #           svcPort: 9980
  #     - host: s3.example.com
  #       paths:
  #         - path: /
  #           pathType: ImplementationSpecific
  #           svcName: renterd-worker
  #           svcPort: 8080
  #   tls:
  #     - secretName: ingress-tls
  #       hosts:
  #         - renterd.example.com
  #         - s3.example.com

# Bitnami mysql chart
mysql:
  enabled: false
  # TODO: this chart is hardcoded to use name "mysql"
  fullnameOverride: "mysql"
  auth:
    database: "renterd"
    # database for metrics isn't created automatically
    databaseMetrics: "renterd_metrics"
    username: "renterd"
    password: "renterd"
    rootPassword: "renterd"
  primary:
    resources:
      requests:
        cpu: 250m
        memory: 3Gi
    extraFlags: "--max_connections=1024 --log_bin_trust_function_creators=1 --innodb_buffer_pool_size=4G"