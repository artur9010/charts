{{ if .Values.autopilot.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: renterd-autopilot
  labels:
    {{- include "renterd.labels" . | nindent 4 }}
    app.kubernetes.io/component: autopilot
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "renterd.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: autopilot
  template:
    metadata:
      labels:
        {{- include "renterd.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: autopilot
      annotations:
        checksum/configmap-renterd-autopilot: {{ include (print $.Template.BasePath "/configmaps/renterd-autopilot.yaml") . | sha256sum }}
    spec:
      automountServiceAccountToken: {{ .Values.autopilot.automountServiceAccountToken }}
      enableServiceLinks: {{ .Values.autopilot.enableServiceLinks }}
      {{- with .Values.autopilot.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for
          image: artur9010/wait-for:v1.0.0
          args:
            - --verbose
            - --timeout=60s
            # Wait for bus before starting autopilot
            - --host="renterd-bus:{{$.Values.service.http.port}}"
            # Make sure all workers are online before starting autopilot
            {{ range $i, $e := until (int .Values.workers.replicas) }}
            - --host="renterd-worker-{{$i}}.renterd-worker:{{$.Values.service.http.port}}"
            {{ end }}
      containers:
        - name: renterd
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: bus
              containerPort: {{ .Values.service.bus.port }}
              protocol: TCP
            - name: http
              containerPort: {{ .Values.service.http.port }}
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.http.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.http.port }}
            initialDelaySeconds: 15
            periodSeconds: 10
          volumeMounts:
            - mountPath: "/data/renterd.yml"
              name: renterd-autopilot-config
              subPath: "renterd.yml"
          envFrom:
            - secretRef:
                name: {{ .Values.secretName | quote }}
          env:
            - name: RENTERD_WORKER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: RENTERD_AUTOPILOT_ENABLED
              value: "true"
            - name: RENTERD_WORKER_ENABLED
              value: "false"
            - name: RENTERD_BUS_REMOTE_ADDR
              value: {{ include "renterd.busAddr" . | quote }}
            - name: RENTERD_WORKER_REMOTE_ADDRS
              value: {{ include "renterd.workerAddrs" . | quote }}
            - name: RENTERD_NETWORK
              value: "{{ .Values.network }}"
            - name: RENTERD_LOG_FILE_ENABLED
              value: "false"
          resources:
            {{- toYaml .Values.autopilot.resources | nindent 12 }}
          {{- if .Values.autopilot.nodeSelector }}
          nodeSelector: {{- .Values.autopilot.nodeSelector | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.autopilot.affinity }}
          affinity: {{- .Values.autopilot.affinity | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.autopilot.tolerations }}
          tolerations: {{- .Values.autopilot.tolerations | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.autopilot.topologySpreadConstraints }}
          topologySpreadConstraints: {{- .Values.autopilot.topologySpreadConstraints | toYaml | nindent 12 }}
          {{- end }}
      volumes:
        - name: renterd-autopilot-config
          configMap:
            name: renterd-autopilot
            defaultMode: 0755
{{ end }}